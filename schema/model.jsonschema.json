{"title":"HCMS Model Schema.","type":"object","properties":{"enableOpenAPI":{"nullable":true,"description":"Should `/openapi.json` endpoint be enabled.","type":"boolean"},"enableOpenRPC":{"nullable":true,"description":"Should `/openrpc.json` endpoint be enabled.","type":"boolean"},"enableSwaggerUI":{"nullable":true,"description":"Should `/swagger-ui/` endpoint be enabled, ensure to also set `enableOpenAPI` to `true`.","type":"boolean"},"entities":{"description":"Entities to define and make available for JSON-RPC methods.","type":"array","items":{"nullable":true,"description":"Entities to define and make available for JSON-RPC methods.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.EntitySpec"}},"jsonRpcMethods":{"description":"JSON-RPC methods to register.","type":"array","items":{"nullable":true,"description":"JSON-RPC methods to register.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.JsonRpcMethod"}},"partialOpenRPC":{"nullable":true,"description":"OpenRPC partial object, should generally set the `info` entry at least, likely `servers` and maybe `externalDocs`. See link:https://spec.open-rpc.org/#introduction[OpenRPC] specification.","additionalProperties":{"nullable":true,"description":"OpenRPC partial object, should generally set the `info` entry at least, likely `servers` and maybe `externalDocs`. See link:https://spec.open-rpc.org/#introduction[OpenRPC] specification.","additionalProperties":true,"type":"object"},"type":"object"},"sql":{"description":"List of SQL scripts to execute at model load time.","type":"array","items":{"nullable":true,"description":"List of SQL scripts to execute at model load time.","type":"string"}},"$schema":{"type":"string","default":"https://yupiik.io/hcms/schema/model.jsonschema.json"}},"$id":"io.yupiik.hcms.service.model.json.Model","$schema":"https://json-schema.org/draft/2020-12/schema","$defs":{"io.yupiik.hcms.service.model.json.Model.JsonRpcMethod":{"title":"JsonRpcMethod","type":"object","properties":{"description":{"nullable":true,"description":"OpenRPC description.","type":"string"},"entityName":{"nullable":true,"description":"Name of the entity to use to generate the JSON-RPC methods.","type":"string"},"security":{"nullable":true,"description":"Security model for this method(s) registration(s). If not set, default is equivalent to anonymous access.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.JsonRpcMethodSecurity"},"type":{"nullable":true,"description":"Type of JSON-RPC method generation.","type":"string","enum":["CRUD","FIND_ALL","CREATE","UPDATE","FIND_BY_ID","DELETE_BY_ID"]}},"$id":"io.yupiik.hcms.service.model.json.Model.JsonRpcMethod"},"io.yupiik.hcms.service.model.json.Model.JsonSchemaFormat":{"nullable":true,"type":"string","enum":["date_time","time","date","duration","email","hostname","ipv4","ipv6","uuid","uri","json_pointer","regex"]},"io.yupiik.hcms.service.model.json.Model.ImplicitFiltering":{"title":"ImplicitFiltering","type":"object","properties":{"clause":{"nullable":true,"description":"Filtering clause(s), ex: `status = 'PUBLISHED' OR author = {{user.sub}}`. The placeholders use handlebars syntax. `user` represents the contextual JWT.","type":"string"}},"$id":"io.yupiik.hcms.service.model.json.Model.ImplicitFiltering"},"io.yupiik.hcms.service.model.json.Model.SecurityValidation":{"title":"SecurityValidation","type":"object","properties":{"anonymous":{"nullable":false,"description":"Can anyone call the endpoint without any validation, not even a JWT.","type":"boolean"},"logged":{"nullable":false,"description":"Can anyone authenticated call this endpoint - requires a valid JWT.","type":"boolean"},"roles":{"description":"Requires one of this list roles to be in the roles of the JWT. At least one role from the JWT (`roles` array) must match this list of role if set. The values is considered as a constant - like `user:admin`. For dynamic filtering (like 'only find my posts'), prefer using entity filtering and the database directly.","type":"array","items":{"nullable":true,"description":"Requires one of this list roles to be in the roles of the JWT. At least one role from the JWT (`roles` array) must match this list of role if set. The values is considered as a constant - like `user:admin`. For dynamic filtering (like 'only find my posts'), prefer using entity filtering and the database directly.","type":"string"}}},"$id":"io.yupiik.hcms.service.model.json.Model.SecurityValidation"},"io.yupiik.hcms.service.model.json.Model.JsonSchemaType":{"nullable":true,"description":"`object`: defines an object, not yet supported for entities properties, `number`: defines a number, likely a floating one, `integer`: defines an integer, `string`: defines a string value - or a date/time/uri, `bool`: defines a boolean, `array`: defines an array, not yet supported for entities properties, `nullValue`: defines null, there is no valid use case for it, there just for completion of the set","type":"string","enum":["object","number","integer","string","bool","array","nullValue"]},"io.yupiik.hcms.service.model.json.Model.JsonSchema":{"title":"JsonSchema","type":"object","properties":{"exclusiveMaximum":{"nullable":true,"description":"For `numbers`/`integer`.","type":"integer","$id":"number"},"exclusiveMinimum":{"nullable":true,"description":"For `numbers`/`integer`.","type":"integer","$id":"number"},"format":{"nullable":true,"description":"For `string`.","type":"string","enum":["date_time","time","date","duration","email","hostname","ipv4","ipv6","uuid","uri","json_pointer","regex"]},"items":{"nullable":true,"description":"As of today defining an array is not supported, will come in the future.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.JsonSchema"},"maxLength":{"nullable":true,"format":"int32","description":"For `string`.","type":"integer"},"maximum":{"nullable":true,"description":"For `numbers`/`integer`.","type":"integer","$id":"number"},"minLength":{"nullable":true,"format":"int32","description":"For `string`.","type":"integer"},"minimum":{"nullable":true,"description":"For `numbers`/`integer`.","type":"integer","$id":"number"},"multipleOf":{"nullable":true,"format":"int32","description":"For `numbers`/`integer`.","type":"integer"},"pattern":{"nullable":true,"description":"For `string`.","type":"string"},"properties":{"nullable":true,"description":"For `objects`, the properties - for entities ensure to use primitives as children.","additionalProperties":{"nullable":true,"description":"For `objects`, the properties - for entities ensure to use primitives as children.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.JsonSchema"},"type":"object"},"required":{"description":"Required attributes for objects.","type":"array","items":{"nullable":true,"description":"Required attributes for objects.","type":"string"}},"type":{"description":"Type for the schema, for entities it is normally `object`. This is a list to allow to create `null` to make it nullable.","type":"array","items":{"nullable":true,"description":"Type for the schema, for entities it is normally `object`. This is a list to allow to create `null` to make it nullable.","type":"string"}}},"$id":"io.yupiik.hcms.service.model.json.Model.JsonSchema"},"io.yupiik.hcms.service.model.json.Model.EntitySpec":{"title":"EntitySpec","type":"object","properties":{"allowedSortKeys":{"description":"List of (JSON) properties which are enabled to sort the `findAll` result set if enabled","type":"array","items":{"nullable":true,"description":"List of (JSON) properties which are enabled to sort the `findAll` result set if enabled","type":"string"}},"allowedWhereKeys":{"description":"List of (JSON) properties which are enabled to filter the `findAll` result set if enabled (where clause)","type":"array","items":{"nullable":true,"description":"List of (JSON) properties which are enabled to filter the `findAll` result set if enabled (where clause)","type":"string"}},"allowedWhereOperators":{"description":"The where operators which can be used in `filters` payload for `findAll` methods if enabled, using `default` enables main database ones. Not setting it will only enable `=` by default. Text - `like` operator for example, is tested in lower case.","type":"array","items":{"nullable":true,"description":"The where operators which can be used in `filters` payload for `findAll` methods if enabled, using `default` enables main database ones. Not setting it will only enable `=` by default. Text - `like` operator for example, is tested in lower case.","type":"string"}},"autoGeneratedIds":{"nullable":false,"description":"If `true` we consider the identifiers are generated at create time - ensure your DDL is accurate if so.","type":"boolean"},"generatedCreateFields":{"nullable":true,"description":"Field generated at `create` time. It is often used for audit (`datetime`) and id fields (`uuid`). Only relevant for `CRUD` method type.","additionalProperties":{"nullable":true,"description":"Field generated at `create` time. It is often used for audit (`datetime`) and id fields (`uuid`). Only relevant for `CRUD` method type.","type":"string"},"type":"object"},"generatedUpdateFields":{"nullable":true,"description":"Field generated at `update` time. It is often used for audit (`datetime`). Only relevant for `CRUD` method type.","additionalProperties":{"nullable":true,"description":"Field generated at `update` time. It is often used for audit (`datetime`). Only relevant for `CRUD` method type.","type":"string"},"type":"object"},"identifierNames":{"description":"List of properties representing the identifiers of the entity - JSON names, if ignored and properties has an `id` entry it will be used as identifier.","type":"array","items":{"nullable":true,"description":"List of properties representing the identifiers of the entity - JSON names, if ignored and properties has an `id` entry it will be used as identifier.","type":"string"}},"implicitFiltering":{"nullable":true,"description":"Implicit where clause entries, note that create will need to use `security` since there is no entity context there.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.EntityImplicitFiltering"},"jsonSchema":{"nullable":true,"description":"Simplified JSON-Schema definition for the entity and JSON-RPC related endpoints.","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.JsonSchema"},"name":{"nullable":true,"description":"Entity name - identifier.","type":"string"},"naming":{"nullable":true,"description":"How to transform properties name to get database names from JSON-RPC ones. No-op if ignored.","type":"string","enum":["CAMEL_TO_SNAKE"]},"revisionProperty":{"nullable":true,"description":"Name of the field used to manage the versioning. If not set there is no revision (only a _snapshot_ of the entity). If set the targetting field if should target either a number or a date (`type=string` and `format=date-time`) field. In such a case, the field is 100% managed by HCMS and is not writable by the client.","type":"string"},"tableName":{"nullable":true,"description":"Database table name.","type":"string"},"validateWithJsonSchema":{"nullable":false,"description":"For `create` and `update` endpoints if relevant, should they be validated with `jsonSchema`. In such a case only the named binding of JSON-RPC is supported, not the array mode. Also take care to virtual fields which will be validated too.","type":"boolean"}},"$id":"io.yupiik.hcms.service.model.json.Model.EntitySpec"},"io.yupiik.hcms.service.model.json.Model.DatabaseToJsonTransformationType":{"nullable":true,"description":"`CAMEL_TO_SNAKE`: convert camel case (`fooBar`) on JSON-RPC side to snake case (`foo_bar`) on database side","type":"string","enum":["CAMEL_TO_SNAKE"]},"io.yupiik.hcms.service.model.json.Model.JsonRpcMethodSecurity":{"title":"JsonRpcMethodSecurity","type":"object","properties":{"create":{"nullable":true,"description":"Security for creation access (`create` endpoint).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.SecurityValidation"},"delete":{"nullable":true,"description":"Security for deletion access (`deleteById` endpoint).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.SecurityValidation"},"update":{"nullable":true,"description":"Security for creation access (`update` endpoint).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.SecurityValidation"},"view":{"nullable":true,"description":"Security for view access (`findById`, `findAll` endpoints).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.SecurityValidation"}},"$id":"io.yupiik.hcms.service.model.json.Model.JsonRpcMethodSecurity"},"io.yupiik.hcms.service.model.json.Model.GenerationType":{"nullable":true,"description":"`uuid`: use a random `UUID`, `datetime`: use current date time with timezone, `sub`: use current authenticated user login, important: ensure to make the related method authenticated if required else null be used (anonymous access)!","type":"string","enum":["uuid","datetime","sub"]},"io.yupiik.hcms.service.model.json.Model.EntityImplicitFiltering":{"title":"EntityImplicitFiltering","type":"object","properties":{"delete":{"nullable":true,"description":"Where clause (without `WHERE` keyword) to add to `delete`, it can use `user.xxx` to access field `xxx` of the JWT if it is there (else `null` will be used).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.ImplicitFiltering"},"update":{"nullable":true,"description":"Where clause (without `WHERE` keyword) to add to `update`, it can use `user.xxx` to access field `xxx` of the JWT if it is there (else `null` will be used).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.ImplicitFiltering"},"view":{"nullable":true,"description":"Where clause (without `WHERE` keyword) to add to `findById` and `findAll`, it can use `user.xxx` to access field `xxx` of the JWT if it is there (else `null` will be used).","$ref":"#/$defs/io.yupiik.hcms.service.model.json.Model.ImplicitFiltering"}},"$id":"io.yupiik.hcms.service.model.json.Model.EntityImplicitFiltering"},"io.yupiik.hcms.service.model.json.Model.JsonRpcMethodType":{"nullable":true,"description":"`CRUD`: generate `create`, `update`, `findById`, `findAll` and `deleteById` JSON-RPC methods, `FIND_ALL`: only generate `findAll` JSON-RPC method, `CREATE`: only generate `create` JSON-RPC method, `UPDATE`: only generate `update` JSON-RPC method, `FIND_BY_ID`: only generate `findById` JSON-RPC method, `DELETE_BY_ID`: only generate `deleteById` JSON-RPC method","type":"string","enum":["CRUD","FIND_ALL","CREATE","UPDATE","FIND_BY_ID","DELETE_BY_ID"]}}}